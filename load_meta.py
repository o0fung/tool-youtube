params = [
    # 'id',
    'title',
    'duration_string',
    # 'formats',
    # 'thumbnails',
    # 'thumbnail',
    # 'channel_id',
    # 'channel_url',
    # 'duration',
    'resolution',
    'view_count',
    'comment_count',
    'like_count',
    # 'average_rating',
    'channel',
    # 'channel_is_verified',
    'channel_follower_count',
    # 'age_limit',
    'webpage_url',
    # 'playable_in_embed',
    # 'live_status',
    # 'media_type',
    # 'release_timestamp',
    # '_format_sort_fields',
    # 'automatic_captions',
    # 'subtitles',
    # 'chapters',
    # 'heatmap',
    'uploader',
    # 'uploader_id',
    # 'uploader_url',
    'upload_date',
    # 'timestamp',
    # 'availability',
    # 'original_url',
    # 'webpage_url_basename',
    # 'webpage_url_domain',
    # 'extractor',
    # 'extractor_key',
    # 'playlist',
    # 'playlist_index',
    # 'display_id',
    # 'fulltitle',
    # 'release_year',
    # 'is_live',
    # 'was_live',
    # 'requested_subtitles',
    # '_has_drm',
    # 'epoch',
    # 'asr',
    # 'filesize',
    # 'format_id',
    # 'format_note',
    # 'source_preference',
    # 'fps',
    # 'audio_channels',
    # 'height',
    # 'quality',
    # 'has_drm',
    # 'tbr',
    # 'filesize_approx',
    # 'url',
    # 'width',
    # 'language_preference',
    # 'preference',
    # 'ext',
    # 'vcodec',
    # 'acodec',
    # 'dynamic_range',
    # 'downloader_options',
    # 'protocol',
    # 'video_ext',
    # 'audio_ext',
    # 'vbr',
    # 'abr',
    # 'aspect_ratio',
    # 'http_headers',
    # 'format',
    'description',
    'tags',
    'categories',
    'language',
]


def show_meta(info):
    print('================================')
    for key in params:
        if key == 'description':
            print(f'{key}:')
            for txt in info[key].split('\n')[:5]:
                print(txt)
            print('... [more description]')
            continue

        print(f"{key}: {info[key]}")
    print('================================')
    